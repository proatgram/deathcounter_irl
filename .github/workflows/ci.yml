name: Continuous Integration

on:
  push:
    branches:
    - main

  pull_request:
    branches:
    - main
env:
  # Needed because latest packages release doesn't have the new username system implemented
  DPP_COMMIT_HASH: 472f5231ef0d6394b400b36f62b5f612e583931b

jobs:
  build:
    strategy:
      matrix:
        os: [macos-12, ubuntu-22.04, windows-2022]
        include:
          - os: ubuntu-22.04
            INSTALL_DEPENDENCIES: |
              sudo apt-get update -q
              sudo apt-get install wget libpqxx-dev libopus-dev libsodium-dev nlohmann-json3-dev -q -y
              git clone https://github.com/brainboxdotcc/DPP.git && cd DPP && git checkout $DPP_COMMIT_HASH && mkdir build
              cmake -S . -B build -DDPP_USE_EXTERNAL_JSON=ON -DDPP_NO_VCPKG=ON
              cmake --build build -j 8
              sudo cmake --install build
              wget -O argparse.tar.gz https://github.com/p-ranav/argparse/archive/refs/tags/v2.9.tar.gz
              tar -vxf argparse.tar.gz && cd argparse-2.9/ && mkdir build
              cmake -S . -B build
              cmake --build build --config Release -j 8
              sudo cmake --install build --config Release
          - os: macos-12
            INSTALL_DEPENDENCIES: |
              brew install libpqxx nlohmann-json argparse libsodium opus cmake git make
              git clone https://github.com/brainboxdotcc/DPP.git && cd DPP && git checkout $DPP_COMMIT_HASH && mkdir build
              cmake -S . -B build -DDPP_USE_EXTERNAL_JSON=ON -DDPP_BUILD_TEST=OFF -DDPP_NO_VCPKG=ON
              cmake --build build -j 8
              sudo cmake --install build
          - os: windows-2022
            INSTALL_DEPENDENCIES: |
              choco install make
              vcpkg install libpqxx nlohmann-json argparse libsodium opus
            OS_CMAKE_ARGS: >-
              -DCMAKE_VS_INCLUDE_INSTALL_TO_DEFAULT_BUILD=1 -DDPP_USE_EXTERNAL_JSON=ON -DDPP_BUILD_TEST=OFF -DPP_NO_VCPKG=ON

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3

    - name: Install static analyzers
      if: matrix.os == 'ubuntu-22.04'
      run: >-
        sudo apt-get install clang-tidy-14 cppcheck -y -q

        sudo update-alternatives --install
        /usr/bin/clang-tidy clang-tidy
        /usr/bin/clang-tidy-14 140
    - name: Restore VCPKG cache
      if: matrix.os == 'windows-2022'
      id: cache-vcpkg
      uses: actions/cache@v3
      with:
        path: 'C:\vcpkg\packages'
        key: ${{ matrix.os }}-vcpkgs

    - name: Install dependencies
      if: |
        steps.cache-vcpkg.outputs.cache-hit != true ||
        steps.cache-vcpkg.outcome == 'skipped'
      run: ${{ matrix.INSTALL_DEPENDENCIES }}


    - name: Setup MultiToolTask
      if: matrix.os == 'windows-2022'
      run: |
        Add-Content "$env:GITHUB_ENV" 'UseMultiToolTask=true'
        Add-Content "$env:GITHUB_ENV" 'EnforceProcessCountAcrossBuilds=true'

    - name: Configure
      shell: pwsh
      run: cmake "--preset=ci-$("${{ matrix.os }}".split("-")[0])" ${{ matrix.OS_CMAKE_ARGS }}

    - name: Build
      run: cmake --build build --config Release -j 2 

    - name: Install
      run: cmake --install build --config Release --prefix prefix
